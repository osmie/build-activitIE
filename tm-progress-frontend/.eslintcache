[{"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/index.js":"1","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/serviceWorkerRegistration.js":"2","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/App.js":"3","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/reportWebVitals.js":"4","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/hooks.js":"5","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/ActiveUser.js":"6","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/NodeCount.js":"7","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/Header.js":"8","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/utils/media-queries.js":"9","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/UserLeaderboard.js":"10","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/routes/Home.js":"11","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/routes/Trends.js":"12","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/utils/useWindowSize.js":"13","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/styles/global.js":"14"},{"size":818,"mtime":1611517822886,"results":"15","hashOfConfig":"16"},{"size":5064,"mtime":1611517822888,"results":"17","hashOfConfig":"16"},{"size":631,"mtime":1614290718477,"results":"18","hashOfConfig":"16"},{"size":364,"mtime":1611517822887,"results":"19","hashOfConfig":"16"},{"size":1303,"mtime":1611519174211,"results":"20","hashOfConfig":"16"},{"size":3131,"mtime":1614205094746,"results":"21","hashOfConfig":"16"},{"size":6277,"mtime":1614205143804,"results":"22","hashOfConfig":"16"},{"size":4279,"mtime":1614291058472,"results":"23","hashOfConfig":"16"},{"size":2986,"mtime":1614290170966,"results":"24","hashOfConfig":"16"},{"size":1167,"mtime":1614205272289,"results":"25","hashOfConfig":"16"},{"size":7999,"mtime":1614290338558,"results":"26","hashOfConfig":"16"},{"size":1183,"mtime":1614205008892,"results":"27","hashOfConfig":"16"},{"size":765,"mtime":1614290103357,"results":"28","hashOfConfig":"16"},{"size":1820,"mtime":1614290950446,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"a9pqw9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/index.js",[],["64","65"],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/serviceWorkerRegistration.js",[],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/App.js",[],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/reportWebVitals.js",[],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/hooks.js",[],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/ActiveUser.js",["66","67","68"],"import React from \"react\";\nimport { useFetch } from \"./hooks\";\nimport {\n  VictoryLine,\n  VictoryChart,\n  VictoryAxis,\n  VictoryGroup,\n  VictoryScatter,\n  VictoryTooltip\n} from \"victory\";\n\nconst ActiveUsers = props => {\n  const { startDate, endDate } = props;\n\n  const url = `https://tasks.openstreetmap.ie/tracker_api/daily_stats?startDate=${startDate || '2021-02-01'}`;\n  const { status, data, error } = useFetch(url);\n\n  return (\n    <div>\n      {/* {data && JSON.stringify(data, null, 2)} */}\n      {data && (\n        <VictoryChart domainPadding={15} scale={{ x: \"time\" }} height={200}>\n          <VictoryAxis\n            label=\"Day\"\n            fixLabelOverlap\n            style={{\n              axis: { stroke: \"#756f6a\" },\n              axisLabel: { fontSize: 12, padding: 30 },\n              grid: { stroke: \"grey\" },\n              ticks: { stroke: \"grey\", size: 5 },\n              tickLabels: { fontSize: 12, padding: 5 },\n            }}\n            \n          />\n          <VictoryAxis \n            dependentAxis \n            label=\"User Count\" \n            style={{\n             \n              axisLabel: { fontSize: 12, padding: 30 },\n              grid: { stroke: \"grey\" },\n              ticks: { stroke: \"grey\", size: 5 },\n              tickLabels: { fontSize: 12, padding: 5 },\n            }}\n            />\n          <VictoryGroup\n            \n            scale={{ x: \"time\" }}\n          >\n            <VictoryLine\n              x=\"date\"\n              // data accessor for y values\n              y=\"numusersperday\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  numusersperday: d.numusersperday,\n                };\n              })}\n              style={{\n                data: { stroke: \"#c43a31\" },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n            />\n            <VictoryScatter\n              x=\"date\"\n              // data accessor for y values\n              y=\"numusersperday\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  numusersperday: d.numusersperday,\n                };\n              })}\n              \n              size={({ active }) => active ? 6 : 3}\n              style={{\n                data: {\n                  stroke: \"#c43a31\",\n                  strokeWidth: 2,\n                  fill: \"#fff\"\n                }\n              }}\n              labelComponent={<VictoryTooltip\n                cornerRadius={0}\n                flyoutStyle={{\n                  stroke: \"#868C97\",\n                  strokeWidth: 0,\n                  fill: \"rgb(255,238,238)\",\n                  opacity: 0.8\n                }}\n                style={{\n                  fill: \"#000\",\n                  fontSize: 12,\n                  fontWeight: 600,\n                  textAnchor: \"middle\"\n                }}\n                />}\n              labels={({ datum }) => `Members: ${datum.numusersperday}`}\n            />\n          </VictoryGroup>\n          \n        </VictoryChart>\n      )}\n    </div>\n  );\n}\n\nexport default ActiveUsers;\n","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/NodeCount.js",["69","70"],"import React from \"react\";\nimport { useFetch } from \"./hooks\";\n\n\nimport {\n  VictoryLine,\n  VictoryChart,\n  VictoryAxis,\n  VictoryGroup,\n  VictoryScatter,\n  VictoryTooltip\n} from \"victory\";\n\nconst NodeCount = props => {\n  const {startDate} = props\n  const url = `https://tasks.openstreetmap.ie/tracker_api/daily_stats?startDate=${startDate || '2021-02-01'}`;\n  const { status, data, error } = useFetch(url);\n\n  return (\n    <div>\n      {data && (\n        <VictoryChart domainPadding={20} scale={{ x: \"time\" }} height={200}>\n          <VictoryAxis\n            label=\"Day\"\n            fixLabelOverlap\n            style={{\n              axis: { stroke: \"#756f6a\" },\n              axisLabel: { fontSize: 12, padding: 40 },\n              grid: { stroke: \"grey\" },\n              ticks: { stroke: \"grey\", size: 5 },\n              tickLabels: { fontSize: 12, padding: 5 },\n            }}\n            \n          />\n          <VictoryAxis \n            dependentAxis \n            label=\"Count\" \n            style={{\n              axisLabel: { fontSize: 12, padding: 40 },\n              grid: { stroke: \"grey\" },\n              ticks: { stroke: \"grey\", size: 5 },\n              tickLabels: { fontSize: 12, padding: 5 },\n            }}\n            />\n          <VictoryGroup \n            scale={{ x: \"time\" }}\n          >\n            <VictoryLine\n              x=\"date\"\n              // data accessor for y values\n              y=\"create\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  create: d.create,\n                };\n              })}\n              style={{\n                data: { stroke: \"#229022\" },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n            />\n            <VictoryScatter\n              x=\"date\"\n              // data accessor for y values\n              y=\"create\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  create: d.create,\n                };\n              })}\n              \n              size={({ active }) => active ? 6 : 3}\n              style={{\n                data: {\n                  stroke: \"#229022\",\n                  strokeWidth: 2,\n                  fill: \"#fff\"\n                }\n              }}\n              labelComponent={<VictoryTooltip\n                cornerRadius={0}\n                flyoutStyle={{\n                  stroke: \"#868C97\",\n                  strokeWidth: 0,\n                  fill: \"rgb(255,238,238)\",\n                  opacity: 0.8\n                }}\n                style={{\n                  fill: \"#000\",\n                  fontSize: 12,\n                  fontWeight: 600,\n                  textAnchor: \"middle\"\n                }}\n                />}\n              labels={({ datum }) => `Created: ${datum.create}`}\n            />\n          </VictoryGroup>\n          <VictoryGroup \n            scale={{ x: \"time\" }}\n          >\n            <VictoryLine\n              x=\"date\"\n              // data accessor for y values\n              y=\"modify\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  modify: d.modify,\n                };\n              })}\n              style={{\n                data: { stroke: \"#FFB347\" },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n            />\n            <VictoryScatter\n              x=\"date\"\n              // modify accessor for y values\n              y=\"modify\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  modify: d.modify,\n                };\n              })}\n              \n              size={({ active }) => active ? 6 : 3}\n              style={{\n                data: {\n                  stroke: \"#FFB347\",\n                  strokeWidth: 2,\n                  fill: \"#fff\"\n                }\n              }}\n              labelComponent={<VictoryTooltip\n                cornerRadius={0}\n                flyoutStyle={{\n                  stroke: \"#868C97\",\n                  strokeWidth: 0,\n                  fill: \"rgb(255,238,238)\",\n                  opacity: 0.8\n                }}\n                style={{\n                  fill: \"#000\",\n                  fontSize: 12,\n                  fontWeight: 600,\n                  textAnchor: \"middle\"\n                }}\n                />}\n              labels={({ datum }) => `modify: ${datum.modify}`}\n            />\n          </VictoryGroup>\n          <VictoryGroup \n            scale={{ x: \"time\" }}\n          >\n            <VictoryLine\n              x=\"date\"\n              // data accessor for y values\n              y=\"delete\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  delete: d.delete,\n                };\n              })}\n              style={{\n                data: { stroke: \"#FF6961\" },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n            />\n            <VictoryScatter\n              x=\"date\"\n              // delete accessor for y values\n              y=\"delete\"\n              data={data.map((d) => {\n                return {\n                  date: new Date(d.date),\n                  delete: d.delete,\n                };\n              })}\n              \n              size={({ active }) => active ? 6 : 3}\n              style={{\n                data: {\n                  stroke: \"#FF6961\",\n                  strokeWidth: 2,\n                  fill: \"#fff\"\n                }\n              }}\n              labelComponent={<VictoryTooltip\n                cornerRadius={0}\n                flyoutStyle={{\n                  stroke: \"#868C97\",\n                  strokeWidth: 0,\n                  fill: \"rgb(255,238,238)\",\n                  opacity: 0.8\n                }}\n                style={{\n                  fill: \"#000\",\n                  fontSize: 12,\n                  fontWeight: 600,\n                  textAnchor: \"middle\"\n                }}\n                />}\n              labels={({ datum }) => `delete: ${datum.delete}`}\n            />\n          </VictoryGroup>\n          \n        </VictoryChart>\n      )}\n    </div>\n  );\n}\n\nexport default NodeCount;\n","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/Header.js",["71"],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/utils/media-queries.js",["72"],"import { css } from 'styled-components';\n\n// import { mediaRanges } from '../theme/theme';\n/**\n * Media query ranges used by the media utility.\n * They're not exported with the main theme because the utility does not\n * build the media functions in runtime, needing the values beforehand.\n */\nexport const mediaRanges = {\n  xsmall: [null, 543],\n  small: [544, 767],\n  medium: [768, 991],\n  large: [992, 1199],\n  xlarge: [1200, null]\n};\n\nconst buildMediaExp = ([lower, upper], type) => {\n  switch (type) {\n    case 'Up':\n      // It makes no sense to have a media query \"Up\" from nothing.\n      // There's no need for a media query in that case.\n      if (lower === null) return null;\n      return `only screen and (min-width: ${lower}px)`;\n    case 'Only':\n      // This only makes sense when there are both bounds.\n      // Otherwise the \"Up\" or \"Down\" can be used with the same result.\n      if (lower === null || upper === null) return null;\n      return `only screen and (min-width: ${lower}px and max-width: ${upper}px)`;\n    case 'Down':\n      // It makes no sense to have a media query \"Down\" from infinity.\n      // There's no need for a media query in that case.\n      if (upper === null) return null;\n      return `only screen and (max-width: ${upper}px)`;\n  }\n};\n\n/**\n * Build the media query utility where for each range there is the 'Up', 'Only',\n * and 'Down' options.\n * Logs a warning to the console when the use media query makes no sense,\n * switching to the best alternative possible.\n *\n * Available media queries:\n * xsmallDown\n * smallUp, smallOnly, smallDown\n * mediumUp, mediumOnly, mediumDown\n * largeUp, largeOnly, largeDown\n * xlargeUp\n *\n * To use with style components as:\n *\n * @example\n * media.smallOnly`\n *   color: red;\n * `\n */\nconst media = Object.keys(mediaRanges).reduce((acc, label) => {\n  const range = mediaRanges[label];\n  return {\n    ...acc,\n    ...['Up', 'Only', 'Down'].reduce((acc_, type) => {\n      return {\n        ...acc_,\n        [`${label}${type}`]: (...args) => {\n          let expr = buildMediaExp(range, type);\n          if (expr === null && (type === 'Up' || type === 'Down')) {\n            // eslint-disable-next-line\n            console.warn(`Media query warning: The specified media query (${label}${type}) has no ${range[0] === null ? 'lower' : 'upper'} bound.\nThere's no need for a media query in this case;\n`);\n          } else if (expr === null) {\n            // eslint-disable-next-line\n            console.warn(`Media query warning: The specified media query (${label}${type}) has no ${range[0] === null ? 'lower' : 'upper'} bound.\nYou can use (${label}${range[0] === null ? 'Down' : 'Up'}) instead.\n`);\n            expr = buildMediaExp(range, range[0] === null ? 'Down' : 'Up');\n          }\n\n          return expr\n            ? css`\n              @media ${expr} {\n                ${css(...args)}\n              }\n            `\n            : css(...args);\n        }\n      };\n    }, acc)\n  };\n}, {});\n\nexport default media;","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/UserLeaderboard.js",["73","74","75"],"import React from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport { useFetch } from \"./hooks\";\n\nconst columns = [\n  \"user\",\n\"numchangesets\",\n\"create\",\n\"modify\",\n\"delete\",\n];\n\nconst options = {\n  print: false,\n  filter: true,\n  filterType: \"dropdown\",\n  responsive: \"standard\",\n  expandableRows: false,\n  expandableRowsHeader: false,\n  expandableRowsOnClick: false,\n  selectableRows: \"none\",\n  rowsPerPage: 50,\n  rowsExpanded: [],\n};\n\n\nconst UserLeaderboard = props => {\n  const { startDate, endDate } = props;\n  \n  const url = `https://tasks.openstreetmap.ie/tracker_api/users_table?startDate=${startDate||'2020-02-08'}`;\n  const { status, data, error } = useFetch(url);\n  \n\n  return (<div>\n    <h3>User Contributions since {startDate || '2020-02-08'}</h3>\n    <p>Data has been sourced from changeset information as published on <a href=\"https://osmcha.org/\" target=\"_blank\" rel=\"noreferrer\">osmcha.org</a> and is updated every 6 hours.</p>\n    {data && (\n              <MUIDataTable\n                data={data}\n                columns={columns}\n                options={options}\n              />\n            )}\n\n  </div>)\n}\n\nexport default UserLeaderboard","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/routes/Home.js",["76","77","78"],"import React from \"react\";\nimport \"../App.css\";\nimport MUIDataTable from \"mui-datatables\";\nimport { useFetch } from \"../hooks\";\n\nimport styled from \"styled-components\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\nimport { parseJSON, formatDistance } from \"date-fns\";\nimport ActiveUsers from \"../ActiveUser\";\nimport NodeCount from \"../NodeCount\";\n\n\nconst columns = [\n  // \"projectId\",\n  \"name\",\n  \"status\",\n  \"priority\",\n  \"percentMapped\",\n  \"percentValidated\",\n  {\n    name: \"lastUpdated\",\n    label: \"Last Updated\",\n    options: {\n      customBodyRender: (value) => formatDistance(parseJSON(value), new Date()),\n    },\n  },\n  {\n    name: \"activity\",\n    label: \"Last User\",\n    options: {\n      customBodyRender: (value) => (\n        <a\n          href={`https://tasks.openstreetmap.ie/user/${value[0].actionBy}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {value[0].actionBy}\n        </a>\n      ),\n    },\n  },\n];\n\n// const options = {\n//   filterType: 'checkbox',\n// };\n\nconst StatsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  margin-bottom: 2rem;\n  grid-gap: 1rem;\n`;\n\nconst StatsCard = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  padding: 16px;\n  border-radius: 4px;\n`;\n\nconst UpdatedAtText = styled.div`\n  margin: 1rem;\n  font-style: italic;\n  font-size: smaller;\n`;\n\nfunction Home() {\n  const url = `https://osmirl-progress.s3-eu-west-1.amazonaws.com/tm3-tasks.json`;\n  const { status, data, error } = useFetch(url);\n  const seen = new Set();\n\n  const filteredArr =\n    data && data.stats\n      ? data.stats.reduce((acc, current) => {\n          const x = acc.find((item) => item.projectId === current.projectId);\n          if (!x) {\n            return acc.concat([current]);\n          } else {\n            return acc;\n          }\n        }, [])\n      : [];\n\n  const options = {\n    print: false,\n    filter: true,\n    filterType: \"dropdown\",\n    responsive: \"standard\",\n    expandableRows: true,\n    expandableRowsHeader: false,\n    expandableRowsOnClick: true,\n    selectableRows: \"none\",\n    sortOrder: {\n      name: \"lastUpdated\",\n      direction: \"desc\",\n    },\n    rowsPerPage: 100,\n    isRowExpandable: (dataIndex, expandedRows) => {\n      // if (dataIndex === 3 || dataIndex === 4) return false;\n\n      // // Prevent expand/collapse of any row if there are 4 rows expanded already (but allow those already expanded to be collapsed)\n      // if (expandedRows.data.length > 4 && expandedRows.data.filter(d => d.dataIndex === dataIndex).length === 0) return false;\n      return true;\n    },\n    rowsExpanded: [],\n    renderExpandableRow: (rowData, rowMeta) => {\n      // console.log(data.stats[rowMeta.dataIndex])\n      const colSpan = rowData.length + 1;\n      return (\n        <TableRow>\n          <TableCell colSpan={colSpan}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              href={`https://tasks.openstreetmap.ie/project/${\n                filteredArr[rowMeta.dataIndex].projectId\n              }`}\n            >\n              View project on TM\n            </Button>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Action</TableCell>\n                  <TableCell align=\"right\">User</TableCell>\n                  <TableCell align=\"right\">When</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredArr[rowMeta.dataIndex].activity\n                  .slice(0, 5)\n                  .map((row) => (\n                    <TableRow key={row.historyId}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <a\n                          href={`https://tasks.openstreetmap.ie/project/${\n                            filteredArr[rowMeta.dataIndex].projectId\n                          }?task=${row.taskId}`}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {`${row.taskId} `}\n                          {row.action === \"LOCKED_FOR_VALIDATION\" &&\n                            \"Task locked for validation\"}\n                          {row.action === \"STATE_CHANGE\" &&\n                            `Task ${row.actionText.toLowerCase()}`}\n                          {row.action === \"LOCKED_FOR_MAPPING\" &&\n                            `Task locked for mapping`}\n                          {row.action === \"AUTO_UNLOCKED_FOR_MAPPING\" &&\n                            `Task unlocked`}\n                        </a>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <a\n                          href={`https://tasks.openstreetmap.ie/user/${row.actionBy}`}\n                        >\n                          {row.actionBy}\n                        </a>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {formatDistance(parseJSON(row.actionDate), new Date())}{\" \"}\n                        ago\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableCell>\n        </TableRow>\n      );\n    },\n    onRowExpansionChange: (curExpanded, allExpanded, rowsExpanded) =>\n      console.log(curExpanded, allExpanded, rowsExpanded),\n  };\n\n  const calculateSum = (arr, property) => {\n    return arr.reduce((sum, li) => sum + li[property], 0);\n  };\n\n  return (\n    <>\n            <div style={{ padding: \"2rem 0\" }}>\n              <h2>Daily Changes - from changesets</h2>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n                  padding: \"1rem 0\",\n                }}\n              >\n                <div>\n                  <span>\n                    <strong>Daily Active Users</strong>\n                  </span>\n                  <ActiveUsers />\n                </div>\n                <div>\n                  <span>\n                    <strong>Daily Contributions</strong>\n                  </span>\n                  <NodeCount />\n                </div>\n                <div>\n                  <span>\n                    <strong>TBC</strong>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <h2>Data Extracted from Tasking Manager</h2>\n            {data && data.stats && (\n              <UpdatedAtText>\n                Data last updated{\" \"}\n                {formatDistance(parseJSON(data.lastUpdated), new Date())}\n              </UpdatedAtText>\n            )}\n\n            {data && data.stats && (\n              <StatsContainer>\n                <StatsCard>\n                  <h2>Task Count</h2>\n                  {data && data.stats.length}\n                </StatsCard>\n                <StatsCard>\n                  <h2>Mapped Progress</h2>\n                  {data && calculateSum(data.stats, \"percentMapped\")} /{\" \"}\n                  {data && data.stats.length * 100}\n                </StatsCard>\n                <StatsCard>\n                  <h2>Validated Progress</h2>\n                  {data && calculateSum(data.stats, \"percentValidated\")} /{\" \"}\n                  {data && data.stats.length * 100}\n                </StatsCard>\n              </StatsContainer>\n            )}\n\n            {data && data.stats && (\n              <MUIDataTable\n                title={\"OSM IRL Task Progress\"}\n                data={filteredArr}\n                columns={columns}\n                options={options}\n              />\n            )}\n            </>\n  );\n}\n\nexport default Home;\n","/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/routes/Trends.js",[],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/utils/useWindowSize.js",[],"/Users/ee_mac/git_repos/tm-progress-tracker/tm-progress-frontend/src/styles/global.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":13,"column":22,"nodeType":"85","messageId":"86","endLine":13,"endColumn":29},{"ruleId":"83","severity":1,"message":"87","line":16,"column":11,"nodeType":"85","messageId":"86","endLine":16,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":16,"column":25,"nodeType":"85","messageId":"86","endLine":16,"endColumn":30},{"ruleId":"83","severity":1,"message":"87","line":17,"column":11,"nodeType":"85","messageId":"86","endLine":17,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":17,"column":25,"nodeType":"85","messageId":"86","endLine":17,"endColumn":30},{"ruleId":"83","severity":1,"message":"89","line":139,"column":11,"nodeType":"85","messageId":"86","endLine":139,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":18,"column":3,"nodeType":"92","messageId":"93","endLine":34,"endColumn":4},{"ruleId":"83","severity":1,"message":"84","line":28,"column":22,"nodeType":"85","messageId":"86","endLine":28,"endColumn":29},{"ruleId":"83","severity":1,"message":"87","line":31,"column":11,"nodeType":"85","messageId":"86","endLine":31,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":31,"column":25,"nodeType":"85","messageId":"86","endLine":31,"endColumn":30},{"ruleId":"83","severity":1,"message":"87","line":75,"column":11,"nodeType":"85","messageId":"86","endLine":75,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":75,"column":25,"nodeType":"85","messageId":"86","endLine":75,"endColumn":30},{"ruleId":"83","severity":1,"message":"94","line":76,"column":9,"nodeType":"85","messageId":"86","endLine":76,"endColumn":13},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'endDate' is assigned a value but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","'error' is assigned a value but never used.","'width' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'seen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]